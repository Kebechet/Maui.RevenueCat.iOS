<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
      <TargetFramework>net7.0-ios</TargetFramework>
      <Nullable>enable</Nullable>
      <ImplicitUsings>true</ImplicitUsings>
      <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
      <PlatformTarget>AnyCPU</PlatformTarget>
      <SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
      <IsBindingProject>true</IsBindingProject>
      <NoBindingEmbedding>false</NoBindingEmbedding>
      <!--<OutputType>Library</OutputType>-->
      <!--<RootNamespace>Purchases</RootNamespace>-->
      <!--<AssemblyName>Purchases</AssemblyName>-->
  </PropertyGroup>

  <PropertyGroup Label="NugetProperties">
      <IsPackable>true</IsPackable>
      <PackageId>Kebechet.Maui.RevenueCat.iOS</PackageId>
      <Description>Contains bindings for https://docs.revenuecat.com/docs/ios</Description>
      <PackageOutputPath>bin\nupkgOutput</PackageOutputPath>
      <RepositoryUrl>https://github.com/Kebechet/Maui.RevenueCat.iOS</RepositoryUrl>
      <PackageProjectUrl>https://github.com/Kebechet/Maui.RevenueCat.iOS</PackageProjectUrl>
      <PackageReadmeFile>README.md</PackageReadmeFile>
      <PackageLicenseFile>LICENSE</PackageLicenseFile>
      <RepositoryType>git</RepositoryType>
      <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
      <Version>4.19.0-preview1</Version>
      <PackageReleaseNotes>Update to latest native library</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
      <ObjcBindingApiDefinition Include="ApiDefinitions.cs" />
      <ObjcBindingCoreSource Include="StructsAndEnums.cs" />
  </ItemGroup>

  <ItemGroup >
      <NativeReference Include="nativelib\RevenueCat.framework">
        <Kind>Framework</Kind>
        <!-- Specifies a space-delimited list of platform Frameworks required by the native library. -->
        <Frameworks></Frameworks>
        <!--Additional linker flags that are required for linking the native library to an application.-->
        <!--<LinkerFlags>-ObjC -framework RevenueCat</LinkerFlags>-->
        <!-- This value should be set to a string containing a space-delimited list of platform Frameworks (e.g. "CoreBluetooth NewsstandKit Twitter"). -->
        <WeakFrameworks></WeakFrameworks>
        <!-- Specifies whether or not the -force_load clang argument is required when linking this native library. -->
        <ForceLoad>True</ForceLoad>
        <!-- Specifies whether or not the native library requires linking with the GCC Exception Handling library (libgcc_eh). -->
        <NeedsGccExceptionHandling>False</NeedsGccExceptionHandling>
        <!-- Specifies whether or not the native library is a C++ library. -->
        <IsCxx>False</IsCxx>
        <!-- This value should be set to true to let Xamarin.iOS determine whether ForceLoad is required or not. -->
        <SmartLink>False</SmartLink>
      </NativeReference>
  </ItemGroup>

  <ItemGroup>
      <None Include="..\LICENSE">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
      <None Include="..\README.md">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
  </ItemGroup>



    <!--Stripping of bitcode from native library-->
	<!--https://github.com/dotnet/maui/issues/10989-->
	<!--This code cant be removed when we replace it with new build without bitcode-->
	<PropertyGroup>
		<!-- Properties used to strip bitcode from frameworks when using Visual Studio for Mac -->
		<_StripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'=='Unix'">_ExpandNativeReferences</_StripBitcodeFromFrameworksMasterAfterTargets>
		<_StripBitcodeFromFrameworksMasterDependsOnTargets Condition="'$(OS)'=='Unix'">_StripBitcodeFromFrameworksOnMac</_StripBitcodeFromFrameworksMasterDependsOnTargets>

		<!-- Properties used to strip bitcode from frameworks when using Visual Studio for Windows -->
		<_StripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'!='Unix'">_ComputeFrameworkFilesToPublish</_StripBitcodeFromFrameworksMasterAfterTargets>
		<_StripBitcodeFromFrameworksMasterDependsOnTargets Condition="'$(OS)'!='Unix'">_StripBitcodeFromFrameworksOnWindows</_StripBitcodeFromFrameworksMasterDependsOnTargets>
	</PropertyGroup>

	<Target Name="_StripBitcodeFromFrameworksMasterTarget"
			Condition="'$(_StripBitcodeFromFrameworksMasterDependsOnTargets)'!='' AND @(_FrameworkNativeReference->Count()) != 0"
			AfterTargets="$(_StripBitcodeFromFrameworksMasterAfterTargets)"
			DependsOnTargets="$(_StripBitcodeFromFrameworksMasterDependsOnTargets)" />

	<Target Name="_StripBitcodeFromFrameworksOnMac"
			Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True') AND '$(_SdkIsSimulator)'=='False'">

		<!-- Find the bitcode_strip command -->
		<Exec Command="xcrun -find bitcode_strip" ConsoleToMSBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="_BitcodeStripCommand" />
		</Exec>

		<!-- Strip the bitcode from frameworks -->
		<Exec Command="$(_BitcodeStripCommand) %(_FrameworkNativeReference.Identity) -r -o %(_FrameworkNativeReference.Identity)" />
	</Target>

	<Target Name="_StripBitcodeFromFrameworksOnWindows"
			Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True') AND '$(_SdkIsSimulator)'=='False' AND '$(IsMacEnabled)'=='true'">

		<!-- Strip the bitcode from frameworks -->
		<Exec SessionId="$(BuildSessionId)"
			  Command="&quot;%24(xcrun -find bitcode_strip)&quot; %(_FrameworkNativeReference.Identity) -r -o %(_FrameworkNativeReference.Identity)" />

		<CopyFileFromBuildServer
		  SessionId="$(BuildSessionId)"
		  File="%(_FrameworkNativeReference.Identity)"
		  TargetFile="%(_FrameworkNativeReference.Identity)" />
	</Target>
</Project>
